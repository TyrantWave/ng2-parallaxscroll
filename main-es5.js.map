{"version":3,"sources":["webpack:///C:/Users/tyran/Programs/ng2-parallaxscroll/dist/ng2-parallaxscroll/fesm5/ng2-parallaxscroll.js","webpack:///./src/app/app.component.html","webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuG;AACrC;;AAElE;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA;AACA,+CAA+C,6BAA6B,WAAW;AACvF,iBAAiB;AACjB;AACA;AACA,kBAAkB,OAAO,mDAAK,EAAE;AAChC,eAAe,OAAO,mDAAK,kBAAkB;AAC7C,qBAAqB,OAAO,mDAAK,oBAAoB;AACrD;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,EAAE;AACtD,SAAS;AACT;AACA,2BAA2B,yEAAiB;AAC5C;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,6BAA6B,EAAE,kCAAkC,EAAE;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,0DAA0D;AAC1D,SAAS,OAAO,wDAAU,EAAE;AAC5B,SAAS,6BAA6B,OAAO,oDAAM,SAAS,yDAAW,IAAI;AAC3E,MAAM;AACN;AACA,kBAAkB,OAAO,mDAAK,EAAE;AAChC,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,wBAAwB,OAAO,mDAAK,EAAE;AACtC,oBAAoB,OAAO,mDAAK,EAAE;AAClC,oBAAoB,OAAO,mDAAK,EAAE;AAClC,mBAAmB,OAAO,mDAAK,EAAE;AACjC,sBAAsB,OAAO,mDAAK,EAAE;AACpC,2BAA2B,OAAO,mDAAK,EAAE;AACzC,yBAAyB,OAAO,mDAAK,EAAE;AACvC;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,sDAAQ;AACxB;AACA;AACA;AACA;AACA;AACA,wBAAwB,4DAAY;AACpC;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEwF;AACxF;;;;;;;;;;;;AC9LA,iLAAiL,sDAAsD,gIAAgI,wBAAwB,wBAAwB,0BAA0B,cAAc,wCAAwC,4DAA4D,wBAAwB,wBAAwB,0BAA0B,cAAc,+GAA+G,+FAA+F,IAAI,gBAAgB,0RAA0R,iEAAiE,IAAI,QAAQ,qP;;;;;;;;;;;ACApsC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;ACZA,uCAAuC,oBAAoB,oBAAoB,sBAAsB,KAAK,6BAA6B,wDAAwD,oBAAoB,oBAAoB,sBAAsB,KAAK,mDAAmD,muB;;;;;;;;;;;;;;;;;ACA3Q;AAQ1C;IALA;QAME,UAAK,GAAG,2BAA2B,CAAC;QAEpC,WAAM,GAA0B;YAC9B,IAAI,EAAE,GAAG;YACT,KAAK,EAAE,CAAC,EAAE;SACX,CAAC;IAEJ,CAAC;IARY,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,2IAAmC;;SAEpC,CAAC;OACW,YAAY,CAQxB;IAAD,mBAAC;CAAA;AARwB;;;;;;;;;;;;;;;;;;;;;ACRiC;AACjB;AAEM;AACW;AAa1D;IAAA;IAAyB,CAAC;IAAb,SAAS;QAXrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;aACb;YACD,OAAO,EAAE;gBACP,uEAAa,CAAC,oBAAoB,CAAC,EAAE,KAAK,EAAE,WAAW,EAAE,CAAC;gBAC1D,uEAAoB;aACrB;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;ACjBtB;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,QAAQ,CAAC,gBAAgB,CAAC,kBAAkB,EAAE;IAC5C,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;SAClD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC;AACpC,CAAC,CAAC,CAAC","file":"main-es5.js","sourcesContent":["import { Component, Input, Directive, ElementRef, Inject, PLATFORM_ID, NgModule } from '@angular/core';\nimport { isPlatformBrowser, CommonModule } from '@angular/common';\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar ParallaxScrollComponent = /** @class */ (function () {\r\n    function ParallaxScrollComponent() {\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ParallaxScrollComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.parallaxStyles = {\r\n            'background-image': this.img ? 'url(' + this.img + ')' : '',\r\n            height: '100%',\r\n            width: '100%'\r\n        };\r\n    };\r\n    ParallaxScrollComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    // tslint:disable-next-line:component-selector\r\n                    selector: 'ng-parallax',\r\n                    template: \"\\n    <div parallax [config]=\\\"config\\\"\\n        [ngStyle]=\\\"parallaxStyles\\\"\\n        [ngClass]=\\\"paraClass\\\">\\n        <ng-content></ng-content>\\n    </div>\\n  \",\r\n                    styles: [\"\\n        :host {\\n            display: block;\\n        }\\n    \"]\r\n                }] }\r\n    ];\r\n    ParallaxScrollComponent.propDecorators = {\r\n        config: [{ type: Input }],\r\n        img: [{ type: Input, args: ['img',] }],\r\n        paraClass: [{ type: Input, args: ['class',] }]\r\n    };\r\n    return ParallaxScrollComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar ParallaxScrollDirective = /** @class */ (function () {\r\n    function ParallaxScrollDirective(element, platformId) {\r\n        var _this = this;\r\n        this.platformId = platformId;\r\n        this.axis = 'Y';\r\n        this.speed = -.7;\r\n        this.initialValue = 0;\r\n        this.cssUnit = 'px';\r\n        this.parallaxPivot = '50%';\r\n        this.cssProperty = 'backgroundPosition';\r\n        this.onScroll = (/**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            /** @type {?} */\r\n            var result;\r\n            /** @type {?} */\r\n            var scrollPosition;\r\n            // Read scroll position * speed + initial val\r\n            if (_this.testBrowser && _this.scrollElement instanceof Window) {\r\n                scrollPosition = _this.scrollElement.scrollY * _this.speed + _this.initialValue;\r\n            }\r\n            else {\r\n                scrollPosition = _this.scrollElement.scrollTop * _this.speed + _this.initialValue;\r\n            }\r\n            // Set limits\r\n            if (_this.maxValue !== undefined && scrollPosition >= _this.maxValue) {\r\n                scrollPosition = _this.maxValue;\r\n            }\r\n            else if (_this.minValue !== undefined && scrollPosition <= _this.minValue) {\r\n                scrollPosition = _this.minValue;\r\n            }\r\n            // Get output based on axis\r\n            if (_this.axis === 'X') {\r\n                result = 'calc(' + _this.parallaxPivot + ' + ' + scrollPosition + _this.cssUnit + ') center';\r\n            }\r\n            else {\r\n                result = 'center calc(' + _this.parallaxPivot + ' + ' + scrollPosition + _this.cssUnit + ')';\r\n            }\r\n            _this.parallaxElement.style[(/** @type {?} */ (_this.cssProperty))] = result;\r\n        });\r\n        this.hostElement = element.nativeElement;\r\n        this.testBrowser = isPlatformBrowser(this.platformId);\r\n        // If the window exists, grab it, else set to hostElement to prevent errors\r\n        this.backupElement = this.testBrowser ? window : this.hostElement;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ParallaxScrollDirective.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        // Read config\r\n        for (var prop in this.config) {\r\n            if (this.config.hasOwnProperty(prop)) {\r\n                ((/** @type {?} */ (this)))[prop] = ((/** @type {?} */ (this.config)))[prop];\r\n            }\r\n        }\r\n        this.speed = +this.speed;\r\n        this.initialValue = +this.initialValue;\r\n        this.parallaxElement = this.parallaxElement || this.hostElement;\r\n        // Grab scroll element\r\n        if (this.scrollerId) {\r\n            try {\r\n                this.scrollElement = document.getElementById(this.scrollerId);\r\n                if (!this.scrollElement) {\r\n                    throw new Error((\"ID ('\" + this.scrollerId + \"') does not exist! Using default\"));\r\n                }\r\n            }\r\n            catch (e) {\r\n                this.scrollElement = this.backupElement;\r\n            }\r\n        }\r\n        else {\r\n            this.scrollElement = this.backupElement;\r\n        }\r\n        this.onScroll();\r\n        this.scrollElement.addEventListener('scroll', this.onScroll.bind(this));\r\n    };\r\n    ParallaxScrollDirective.decorators = [\r\n        { type: Directive, args: [{\r\n                    // tslint:disable-next-line:directive-selector\r\n                    selector: '[parallax]'\r\n                },] }\r\n    ];\r\n    /** @nocollapse */\r\n    ParallaxScrollDirective.ctorParameters = function () { return [\r\n        { type: ElementRef },\r\n        { type: Object, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] }\r\n    ]; };\r\n    ParallaxScrollDirective.propDecorators = {\r\n        config: [{ type: Input }],\r\n        axis: [{ type: Input }],\r\n        speed: [{ type: Input }],\r\n        initialValue: [{ type: Input }],\r\n        maxValue: [{ type: Input }],\r\n        minValue: [{ type: Input }],\r\n        cssUnit: [{ type: Input }],\r\n        scrollerId: [{ type: Input }],\r\n        parallaxElement: [{ type: Input }],\r\n        parallaxPivot: [{ type: Input }]\r\n    };\r\n    return ParallaxScrollDirective;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar ParallaxScrollModule = /** @class */ (function () {\r\n    function ParallaxScrollModule() {\r\n    }\r\n    ParallaxScrollModule.decorators = [\r\n        { type: NgModule, args: [{\r\n                    declarations: [\r\n                        ParallaxScrollComponent,\r\n                        ParallaxScrollDirective\r\n                    ],\r\n                    imports: [\r\n                        CommonModule,\r\n                    ],\r\n                    exports: [\r\n                        ParallaxScrollComponent,\r\n                        ParallaxScrollDirective\r\n                    ]\r\n                },] }\r\n    ];\r\n    return ParallaxScrollModule;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\nexport { ParallaxScrollComponent, ParallaxScrollModule, ParallaxScrollDirective as ɵa };\n//# sourceMappingURL=ng2-parallaxscroll.js.map\n","module.exports = \"<h1>Parallax Scroll Examples</h1>\\r\\n\\r\\n<h3>Config used:</h3>\\r\\n<pre>\\r\\n  <code class=\\\"language-typescript\\\">\\r\\n    config: IParallaxScrollConfig = &#123;\\r\\n      axis: 'Y',\\r\\n      speed: -.5\\r\\n    &#125;\\r\\n  </code>\\r\\n</pre>\\r\\n\\r\\n<h3>CSS Used: </h3>\\r\\n<pre>\\r\\n  <code class=\\\"language-css\\\">\\r\\n    .parallax-container &#123;\\r\\n      height: 200px;\\r\\n      width: 1000px;\\r\\n      max-width: 100%;\\r\\n    &#125;\\r\\n  \\r\\n    .parallax-directive &#123;\\r\\n      background-image: url(\\\"/assets/background.JPG\\\");\\r\\n      height: 200px;\\r\\n      width: 1000px;\\r\\n      max-width: 100%;\\r\\n    &#125;\\r\\n  </code>\\r\\n</pre>\\r\\n<h2>As a component: </h2>\\r\\n<pre>\\r\\n  <code class=\\\"language-markup\\\">\\r\\n    &lt;ng-parallax [config]=\\\"config\\\" img=\\\"/assets/background.JPG\\\" class=\\\"parallax-container\\\"&gt;&lt;/ng-parallax&gt;\\r\\n  </code>\\r\\n</pre>\\r\\n<ng-parallax [config]=\\\"config\\\" img=\\\"/assets/background.JPG\\\" class=\\\"parallax-container\\\"></ng-parallax>\\r\\n\\r\\n<p>...</p>\\r\\n<p>...</p>\\r\\n<p>...</p>\\r\\n<p>...</p>\\r\\n<h2>As a directive: </h2>\\r\\n<pre>\\r\\n  <code class=\\\"language-markup\\\">\\r\\n    &lt;div parallax [config]=\\\"config\\\" class=\\\"parallax-directive\\\"&gt;&lt;/div&gt;\\r\\n  </code>\\r\\n</pre>\\r\\n<div parallax [config]=\\\"config\\\" class=\\\"parallax-directive\\\"></div>\\r\\n\\r\\n<p>...</p>\\r\\n<p>...</p>\\r\\n<p>...</p>\\r\\n<p>...</p>\\r\\n<p>...</p>\\r\\n<p>...</p>\\r\\n<p>...</p>\\r\\n<p>...</p>\\r\\n<p>...</p>\\r\\n<p>...</p>\\r\\n\"","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \".parallax-container {\\r\\n  height: 200px;\\r\\n  width: 1000px;\\r\\n  max-width: 100%;\\r\\n}\\r\\n\\r\\n.parallax-directive {\\r\\n  background-image: url(\\\"/assets/background.JPG\\\");\\r\\n  height: 200px;\\r\\n  width: 1000px;\\r\\n  max-width: 100%;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb2plY3RzL25nMi1wYXJhbGxheHNjcm9sbC10ZXN0ZXIvc3JjL2FwcC9hcHAuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGFBQWE7RUFDYixhQUFhO0VBQ2IsZUFBZTtBQUNqQjs7QUFFQTtFQUNFLCtDQUErQztFQUMvQyxhQUFhO0VBQ2IsYUFBYTtFQUNiLGVBQWU7QUFDakIiLCJmaWxlIjoicHJvamVjdHMvbmcyLXBhcmFsbGF4c2Nyb2xsLXRlc3Rlci9zcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnBhcmFsbGF4LWNvbnRhaW5lciB7XHJcbiAgaGVpZ2h0OiAyMDBweDtcclxuICB3aWR0aDogMTAwMHB4O1xyXG4gIG1heC13aWR0aDogMTAwJTtcclxufVxyXG5cclxuLnBhcmFsbGF4LWRpcmVjdGl2ZSB7XHJcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiL2Fzc2V0cy9iYWNrZ3JvdW5kLkpQR1wiKTtcclxuICBoZWlnaHQ6IDIwMHB4O1xyXG4gIHdpZHRoOiAxMDAwcHg7XHJcbiAgbWF4LXdpZHRoOiAxMDAlO1xyXG59XHJcbiJdfQ== */\"","import { Component } from '@angular/core';\r\nimport { IParallaxScrollConfig } from 'projects/ng2-parallaxscroll/src/public_api';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'ng2-parallaxscroll-tester';\r\n\r\n  config: IParallaxScrollConfig = {\r\n    axis: 'Y',\r\n    speed: -.5\r\n  };\r\n\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { ParallaxScrollModule } from 'ng2-parallaxscroll';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule.withServerTransition({ appId: 'serverApp' }),\r\n    ParallaxScrollModule,\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n  platformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n});\r\n"],"sourceRoot":""}